DBFind(applications).Columns("name,id").Where({name:"Basic application"}).Vars(application)
SetVar(role_admin, AppParam(App: #application_id#, Name: role_admin))
SetTitle($role_notifics$)
If(And(#role_id#==#role_admin#,#ecosystem_id#==1)){
    DBFind(ecosystems).Ecosystem(1).Count(ecos_count)
    If(#ecos_count#>1){
        AddToolButton(Title: $broadcast_send$, Page: notifications_broadcast, Icon: icon-plus)
    }
}
AddToolButton(Title: $send$, Page: notifications_roles_send, Icon: icon-plus)
If(GetVar(Search)){
    SetVar(Where,{"notification->type":2, "recipient->role_name":{"$like": #Search#}, "recipient->role_id":#role_id#})
}.Else{
    SetVar(Where, {"notification->type":2, "recipient->role_id":#role_id#}).(Search,)
}

DBFind(notifications,src_notifications).Where(#Where#).Order([{closed: "1"},{id: "-1"}]).Limit(20).Columns("id,recipient->role_id,recipient->role_name,recipient->image_id,sender->type,sender->member_id,sender->member_name,sender->role_id,sender->role_name,notification->icon,page_name,page_params,date_created,date_closed,date_start_processing,processing_info->member_name,closed").Custom(_id){
    If(#closed# == 0){
        SetVar(style_text,"text-normal").(style_link,"text-primary")
    }.Else{
        SetVar(style_text,"text-muted").(style_link,"text-muted")
    }
    Span(Class: #style_text#, Body: #id#)
}.Custom(_recipient){
    LinkPage(Class: #style_link# t5 text-bold, Page: roles_view, PageParams: "v_role_id=#recipient.role_id#"){
        If(#recipient.image_id#>0){
            Image(Src: Binary().ById(#recipient.image_id#) "#img_data#", Class: mr-sm).Style(width: 30px; border: 1px solid #5A5D63;)
            #recipient.role_name#
        }.Else{
            Div(){
                Span(Em(Class: fa icon-settings fa-2x)).Style(margin-right:10px;)
                Span(#recipient.role_name#)
            }.Style(display:flex; align-items:center;)
        }
    }
}.Custom(_sender){
    If(#sender.type#==1){
        LinkPage(Class: #style_link# h5 text-bold, Page: profile_view, PageParams: "v_member_id=#sender.member_id#"){#sender.member_name#}
    }
    If(#sender.type#==2){
        LinkPage(Class: #style_link# h5 text-bold, Page: roles_view, PageParams: "v_role_id=#sender.role_id#"){#sender.role_name#}
    }
}.Custom(_icon){
    Span(Class: fa #notification.icon# fa-2x #style_text#)
}.Custom(_page){
    LinkPage(Class: #style_link# t5 text-bold, Page: #page_name#, PageParams: "notific_id=#id#"){
        #page_name#
    }
}.Custom(_date){
    Div(#style_text# t6){DateTime(DateTime: #date_created#, Format: "DD.MM.YYYY HH:MI")}
    Div(#style_text# t6){DateTime(DateTime: #date_closed#, Format: "DD.MM.YYYY HH:MI")}
}.Custom(_processing){
    Div(Class: #style_text# t6){
        If(#date_start_processing# == NULL){
            $not_started$
        }.Else{
            Span(LangRes(started), mr-sm) #processing_info.member_name# 
            Span(LangRes(at), mr-sm)
            DateTime(DateTime: #date_start_processing#, Format: "DD.MM.YYYY HH:MI")
        }
    }
}.Custom(_status){
    If(#closed# == 0){
        Span(Class: #style_text#){
            If(#date_start_processing# == NULL){
                LangRes(active)
            }.Else{
                LangRes(processing)
            }
        }
    }.Else{
        Span(Class: #style_text#, Body: LangRes(closed))
    }
}.Custom(_actions){
    Div(text-right){
        If(#closed# == 0){
            If(#date_start_processing# == NULL){
                Button(Class: btn btn-default fa fa-play, Contract: NotificationsProcess, Params: "notific_id=#id#", Page: notifications_list, PageParams: "type=1").Alert(Text: $want_start_processing_notification$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
            }.Else{
                Button(Class: btn btn-default fa fa-trash, Contract: NotificationsClose, Params: "notific_id=#id#", Page: notifications_list, PageParams: "type=1").Alert(Text: $want_close_notification$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
            }
        }
    }
}

Form(panel panel-primary){
    Div(panel-body){
        Div(row){
            Div(col-md-12){
                Div(input-group){
                    Div(input-group-addon){
                        LangRes(recipient)
                    }
                    Input(Name: Search, Value: #Search#)
                    Div(input-group-btn){
                        Button(Class: btn btn-default fa fa-search, Page: notifications_list, PageParams: "Search=Val(Search),type=1")
                    }
                }
            }
        }
        Div(row){
            Div(col-md-12){
                Table(Source: src_notifications, Columns: "$id$=_id,$icon$=_icon,$recipient$=_recipient,$page_name$=_page,$sender$=_sender,$processing$=_processing,$sent$/$—Ålosed$=_date,$status$=_status,=_actions")
            }
        }
        If(GetVar(Search)){
            Div(row){
                Div(col-md-12 mt-lg){
                    Div(text-center){
                        Button(Body: $view_all$, Class: btn btn-primary, Page: notifications_list, PageParams: "type=1")
                    }
                }
            }
        }
    }
}