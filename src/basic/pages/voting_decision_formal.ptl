Div(content-wrapper){
    If(#vID# > 0){
        DBFind(votings,src_voting).WhereId(#vID#).Columns("id,voting->name,optional->contract_accept,optional->contract_reject,optional->contract_accept_params,optional->contract_reject_params").Vars(instance)
        DBFind(votings_subject,src_subject).Where({voting_id:#vID#}).Columns("id,subject->column,subject->column_value,subject->table_id,subject->table,subject->description").Vars(prefix)

        If(#prefix_id#>0){
        }.Else{
            SetVar(prefix_subject_description,)
            SetVar(prefix_subject_table,)
            SetVar(prefix_subject_table_id,)
            SetVar(prefix_subject_column,)
            SetVar(prefix_subject_column_value,)
        }

        SetTitle($subject_voting$)
        Div(breadcrumb){
            LinkPage($voting$, voting_list)
            Span(/,mh)
            LinkPage(#instance_voting_name#, voting_view,, "vID=#vID#")
            Span(/,mh)
            Span(Class: text-muted, Body: $subject_voting$)
        }

        Div(row){
            Div(col-sm-10 col-sm-offset-1 col-lg-8 col-lg-offset-2){
                Form(panel panel-primary){
                    Div(panel-body){
                        Div(form-group){
                            Div(row){
                                Div(col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(table_to_written))
                                        Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(col-md-9 mb-sm text-left){
                                    Input(Name: table_to_written, Value: #prefix_subject_table#, Placeholder: "$table_to_written_desc$")
                                }
                            }
                            Div(row){
                                Div(col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(row_id))
                                        Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(col-md-9 mb-sm text-left){
                                    Input(Name: row_id, Class: form-control, Type: number, Value: #prefix_subject_table_id#, Placeholder: "$row_id_desc$")
                                }
                            }
                            Div(row){
                                Div(col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(column_name))
                                        Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(col-md-9 mb-sm text-left){
                                    Input(Name: column_name, Value: #prefix_subject_column#, Placeholder: "$column_name_desc$")
                                }
                            }
                            Div(row){
                                Div(col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(written_value))
                                        Span(Class: text-danger, Body:*)
                                    }
                                }
                                Div(col-md-9 mc-sm text-left){
                                    Input(Name: written_value, Value: #prefix_subject_column_value#, Placeholder: "$written_value_desc$")
                                }
                            }
                        }
                        Div(form-group){
                            Div(row){
                                Div(col-md-3 mt-lg text-right){
                                    Label(){
                                        Span(Body: LangRes(description))
                                    }
                                }
                                Div(col-md-9 mc-sm text-left){
                                    Input(Name: description, Class: form-control, Type: textarea, Value: #prefix_subject_description#)
                                }
                            }
                        }
                        Div(form-group){
                            Div(row){
                                Div(col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(contract_accept))
                                    }
                                }
                                Div(col-md-9 mb-sm text-left){
                                    Input(Name: contract_accept, Value: #instance_optional_contract_accept#, Placeholder: "$contract_accept_des$").Validate(minLength:3, maxLength:255)
                                    InputErr(Name: contract_accept, minLength: $validate_contract_name$, maxLength: $validate_contract_name$)
                                }
                            }
                            Div(row){
                                Div(col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(params))
                                    }
                                }
                                Div(col-md-9 mb-sm text-left){
                                    Input(Name: contract_accept_params, Value: #instance_optional_contract_accept_params#, Placeholder: "$contract_params_des$")
                                }
                            }
                            Div(row){
                                Div(col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(contract_reject))
                                    }
                                }
                                Div(col-md-9 mb-sm text-left){
                                    Input(Name: contract_reject, Value: #instance_optional_contract_reject#, Placeholder: "$contract_reject_des$").Validate(minLength:3, maxLength:255)
                                    InputErr(Name: contract_reject, minLength: $validate_contract_name$, maxLength: $validate_contract_name$)
                                }
                            }
                            Div(row){
                                Div(col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(params))
                                    }
                                }
                                Div(col-md-9 mc-sm text-left){
                                    Input(Name: contract_reject_params, Value: #instance_optional_contract_reject_params#, Placeholder: "$contract_params_des$")
                                }
                            }
                        }
                    }
                    Div(panel-footer text-right){
                        Div(pull-left){
                            Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: "vID=#vID#")
                        }
                        Input(Name: votingID, Type: hidden, Value: #vID#)
                        Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: "vID=#vID#", Contract: VotingSubjectFormal)
                    }
                }
            }
        }
    }.Else{
        Div(md-12 alert alert-danger text-center){
            Span(Body: LangRes(attention))
        }
    }
}