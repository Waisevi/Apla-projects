Div(content-wrapper){
    SetTitle(Delayed contract)
    Div(breadcrumb){
		LinkPage("Delayed contract", blockcron_list)
		Span(/).Style(margin-right: 10px; margin-left: 10px;)
		If(#id# > 0){
			Span(Class: text-muted, Body: "Edit")
		}.Else{
			Span(Class: text-muted, Body: "New")
		}
    }
	
	Form(){
		If(#id# > 0){
			DBFind(Name: delayed_contracts).Where({id:#id#}).Vars(delayed_contract)
			Div(form-group){
				Label("Contract")
				Input(Name: ContName, Disabled: "true", Value: #delayed_contract_contract#)
			}
			Div(form-group){
				Label("Start block")
				Input(Name: StartBlock, Type: number, Value: #delayed_contract_block_id#)
			}
			Div(form-group){
				Label("Interval")
				Input(Name: EveryBlock, Type: number, Value: #delayed_contract_every_block#)
			}
			Div(form-group){
				Label("Limit")
				Input(Name: Limit, Type: number, Value: #delayed_contract_limit#)
			}
			Div(form-group){
				Label("Conditions")
				Input(Name: Conditions, Value: #delayed_contract_conditions#)
			}
			Div(form-group){
				Div(row){
					Div(text-left col-md-6){
						Button(Body: "Delete", Class: btn btn-danger, Page: blockcron_list, Contract: @1EditBlockCron, Params: "Id=#id#,Deleted=1").Alert(Text: "Delete delayed contract?",ConfirmButton: "Yes", CancelButton: "No")
					}
					Div(text-right col-md-6){
						Button(Body: "Save", Class: btn btn-primary, Page: blockcron_list, Contract: @1EditBlockCron, Params: "Id=#id#")
					}
				}
			}
		}.Else{
			Div(form-group){
				Label("Contract")
				Input(Name: ContName)
			}
			Div(form-group){
				Label("Start block")
				Input(Name: StartBlock, Type: number)
			}
			Div(form-group){
				Label("Interval")
				Input(Name: EveryBlock, Type: number)
			}
			Div(form-group){
				Label("Limit")
				Input(Name: Limit, Type: number)
			}
			Div(form-group){
				Label("Conditions")
				Input(Name: Conditions)
			}
			Div(form-group){
				Div(text-right){
					Button(Body: "Save", Class: btn btn-primary, Page: blockcron_list, Contract: @1NewBlockCron)
				}
			}
		}
    }
}