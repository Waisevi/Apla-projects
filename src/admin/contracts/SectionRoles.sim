contract SectionRoles {
	data {
		id int
		rid int
		operation string
	}

	conditions {
		if $operation == "add" {
			var roles_id map
			var json array
			var i int
			i = 0
			roles_id = DBFind("sections").Where({"id":$id}).Columns("roles_access").Row()
			json = JSONDecode(roles_id["roles_access"])
			while i < Len(json) {
				if (json[i]==$rid) {
					warning "This role is already have permission"
				}
				i = i + 1
			}
		}
	}
	
	action {
		var roles_array array
		roles_array = DBFind("sections").Where({"id":$id}).Columns("roles_access").One("roles_access")
		if $operation == "add" {
			if (roles_array=="[]") {			
				var roles_id array
				roles_id[0] = $rid
				roles_id = JSONEncode(roles_id)
				DBUpdate("sections", $id, {"roles_access":roles_id})
			} else {
				var roles_id map
				var json array
				roles_id = DBFind("sections").Where({"id":$id}).Columns("roles_access").Row()
				json = JSONDecode(roles_id["roles_access"])
				json = Append(json, $rid)
				json = JSONEncode(json)
				DBUpdate("sections", $id, {"roles_access":json})
			}
		} 
		if $operation == "remove" {
				var roles_id map
				var json array
				var buffer string
				roles_id = DBFind("sections").Where({"id":$id}).Columns("roles_access").Row()
				json = JSONDecode(roles_id["roles_access"])
				buffer = Join(json, ",")
				if Contains(buffer, Str($rid)) {
					buffer = Replace(buffer, `,` + Str($rid), ``)
				}
				if HasPrefix(buffer, Str($rid)) {
					buffer = Replace(buffer, Str($rid) + `,`, ``)
				}
				json = Split(buffer, ",")
				json = JSONEncode(json)
				DBUpdate("sections", $id, {"roles_access":json})
		}   
	}
}
