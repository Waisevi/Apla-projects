contract referendums_reject {
    data {
        referendum_id int
    }

    conditions {
        $referendums_map = DBFind("referendums").Where("id=$", $referendum_id).Row()
        if !$referendums_map {
            warning "Referendum not found"
        }

		$participant_id = DBFind("referendums_participants").Where("referendum_id=$ and member_id=$", $referendum_id, $key_id).One("id")
        if $participant_id {
			warning "You already voted"
		}

        $votes_total = Int($referendums_map["votes_total"])
        $votes_accept = Int($referendums_map["votes_accept"])
        $votes_reject = Int($referendums_map["votes_reject"])
        $percent_accept = Int($referendums_map["percent_accept"])
        $percent_reject = Int($referendums_map["percent_reject"])
    }

    action {
        $votes_total = $votes_total + 1
        $votes_reject = $votes_reject + 1

        $percent_accept = $votes_accept * 100 / $votes_total
        $percent_reject = 100 - $percent_accept

        DBUpdate("referendums", $referendum_id, "votes_total,votes_accept,votes_reject,percent_accept,percent_reject", $votes_total, $votes_accept, $votes_reject, $percent_accept, $percent_reject)
        DBInsert("referendums_participants", "referendum_id,member_id,decision", $referendum_id, $key_id, -1)

        $notific_id = DBFind("notifications").Where("page_name=$ and page_params->referendum_id=$ and recipient->member_id=$ and closed=$", "referendums_view", $referendum_id, $key_id, 0).One("id")
        if ($notific_id != nil){
            notifications_Close("notific_id", Int($notific_id))
		}
    }
}