contract TokenTransfer {
    data {
        Amount money
        Sender_AccountId int
        Recipient_AccountId int
        Comment string "optional"
        //Signature string "optional hidden"
    }
    
    conditions {
        //check amount
        if $Amount == 0 {
            error "Amount is zero"
        }
        if $Amount < 0 {
            error "Amount is negative"
        }
        
        //check the sender
        var sender string
        sender = DBFind("keys").Where("id=$", $Sender_AccountId).One("id")
        if !sender {
            error Sprintf("Sender %v is invalid", $Sender_AccountId)
        }
        
        //check balance
        $sender_balance = Money(DBFind("keys").Where("id=$", $Sender_AccountId).One("amount"))
        if $Amount > $sender_balance {
            error Sprintf("Money is not enough %v < %v", $sender_balance, $Amount)
        }
        
        //check the recipient
        var recipient string
        recipient = DBFind("keys").Where("id=$", $Recipient_AccountId).One("id")
        if !recipient {
            error Sprintf("Recipient %v is invalid", $Recipient_AccountId)
        }
    }
    
    action {
        DBUpdate("keys", $Sender_AccountId, "-amount", $Amount)
        DBUpdate("keys", $Recipient_AccountId, "+amount", $Amount)
        DBInsert("history", "sender_id,recipient_id,amount,comment,block_id,txhash", $Sender_AccountId, $Recipient_AccountId, $Amount, $Comment, $block, $txhash)
    }
}