DBFind(applications).Columns("name,id").Where("name='Basic application'").Vars(application)
DBFind(roles, src_roles).Columns("role_name,id").Where("deleted=0").Order(id)

If(GetVar(role_name)){}.Else{SetVar(role_name,)}
If(GetVar(role_type)){}.Else{SetVar(role_type,1)}

If(GetVar(rid)){
    DBFind(roles).Where("id=#rid#").Columns("roles_access->rids,id,role_type,role_name").Vars(rid)
    SetVar(title,$edit_role$).(role_type,"AppParam(App:#application_id#, Name: roles_types, Index: #rid_role_type#)")

    If(#rid_roles_access_rids#!=""){
        DBFind(roles,src_roles_access).Columns("id,role_name").Where("id in (#rid_roles_access_rids#)").Order(role_name)
    }
    DBFind(roles,src_roles).Columns("id,role_name").Where("deleted=0").Order(id)
    Data(form, "Name,Res,Type,Src,Val"){
        role_name,name,text,,#role_name#
        roles_types,type,app_param,,#rid_role_type#
        roles_managers,roles_managers,rids,src_roles,
    }
}.Else{
    AppParam(App:#application_id#, Name: roles_types_selection, Source: app_roles_types)
    SetVar(rid,0).(title,$new_role$)
    Data(form, "Name,Res,Type,Req,Src,Val"){
        role_name,name,input,*,"",#role_name#
        role_type,type,select,*,app_roles_types,#role_type#
    }
}
SetTitle(#title#)
If(And(#role_name#=="",#rid_id#>0)){
    SetVar(role_name,#rid_role_name#).(role_type,#rid_role_type#)
}

Div(content-wrapper){
    Div(breadcrumb){
        LinkPage($roles$, roles_list)
        Span(/).Style(margin-right: 10px; margin-left: 10px;)
        Span(Class: text-muted, Body: #title#)
    }
    Div(container){
        Div(row){
            Div(col-md-8 col-md-offset-2){
                Form(panel panel-primary){
                    Div(panel-heading){#title#}
                    Div(panel-body){
                        ForList(form){
                            Div(row form-group){
                                Div(col-md-3 mt-sm text-right){
                                    Label(For:#Name#){
                                        LangRes(#Res#)
                                        If(#Req#=="*"){
                                            Span(*,text-danger)
                                        }
                                    }
                                }
                                Div(col-md-9 text-left){
                                    If(#Type#==input){
                                        Input(Name: #Name#, Value:#Val#).Validate(minLength:3, maxLength:30)
                                        InputErr(Name: #Name#, minLength: $validate_role_name$, maxLength: $validate_role_name$)
                                    }.ElseIf(#Type#==text){
                                        Div(text-muted mt-sm){#Val#}
                                    }.ElseIf(#Type#==app_param){
                                        Div(text-muted mt-sm){
                                            AppParam(App:#application_id#, Name: #Name#, Index: #Val#)
                                        }
                                    }.ElseIf(#Type#==select){
                                        Select(Name: #Name#, Source: #Src#, NameColumn: name, ValueColumn: id, Value:#Val#)
                                    }.ElseIf(#Type#==rids){
                                        Div(input-group mb-sm){
                                            Select(Name:#Name#, Source:#Src#, NameColumn:role_name, ValueColumn: id)
                                            Div(input-group-btn){
                                                Button(Class: btn btn-primary fa fa-plus, Page: roles_create, PageParams:"role_name=Val(role_name),role_type=Val(role_type),rid=#rid#", Contract:Roles_AccessManager, Params:"Rid=#rid#,ManagerRid=Val(#Name#),Action=add")
                                            }
                                        }
                                        ForList(src_roles_access){
                                            If(#id#==#role_id#){
                                                Button(Class: btn btn-info mr-sm mb-sm, Page: roles_create, PageParams:"role_name=Val(role_name),role_type=Val(role_type),rid=#rid#", Contract:Roles_AccessManager, Params:"Rid=#rid#,ManagerRid=#id#,Action=remove", Body: Span(Class: fa fa-remove) #role_name#).Alert(Text: $want_delete_your_role_from_manager$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
                                            }.Else{
                                                Button(Class: btn btn-default mr-sm mb-sm, Page: roles_create, PageParams:"role_name=Val(role_name),role_type=Val(role_type),rid=#rid#", Contract:Roles_AccessManager, Params:"Rid=#rid#,ManagerRid=#id#,Action=remove"){
                                                    Span(Class: fa fa-remove)
                                                    #role_name#
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    Div(panel-footer text-right clearfix){
                        Div(pull-left){
                            Button(Body: LangRes(back), Class: btn btn-default, Page: roles_list)
                        }
                        If(#rid_id#>0){}.Else{
                            Button(Body: LangRes(create), Class: btn btn-primary, Page: roles_list, Contract: Roles_Create)
                        }
                    }
                }
            }
        }
    }
}