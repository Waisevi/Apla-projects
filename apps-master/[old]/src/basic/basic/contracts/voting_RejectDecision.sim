contract voting_RejectDecision {
    data {
        votingID int
    }
    
    conditions {
        $voting = DBFind("votings").Columns("voting->type_participants,voting->role_id,flags->decision,flags->notifics").Where("id=$", $votingID).Row()
        if !$voting {
            warning "Voting is not found"
        }
        if $voting["voting.type_participants"] == 3{
            if $voting["voting.role_id"] != $role_id{
                warning "Incorrect role for voting"
            }
        }

        $participant_id = DBFind("votings_participants").Where("voting_id=$ and member->member_id=$", $votingID, $key_id).One("id")
        if !$participant_id {
            warning "You are not a participant in this voting"
        }
    }
    
    action {
        if $voting["flags.notifics"] == 1 {
            // close sent notifications
            var notific_id string
            notific_id = DBFind("notifications").Where("recipient->member_id=$ and page_name='voting_view' and page_params->voting_id=$ and closed=0", $key_id, $votingID).One("id")
            if notific_id {
                notifications_Close("notific_id", Int(notific_id))
            }
        }
        
        if $voting["flags.decision"] == 1 {
            warning "Decision was taken. Voting is now not possible"
        }
        var voting_start, voting_end string
        voting_start = DBFind("votings").Where("id=$ and date_started < $", $votingID, BlockTime()).One("id")
        voting_end = DBFind("votings").Where("id=$ and date_ended > $", $votingID, BlockTime()).One("id")
        if !voting_start {
            warning "Voting has not yet begun. Try again later, please"
        }
        if !voting_end {
            warning "Voting has expired. Voting is now not possible"
        }
        
        
        DBUpdate("votings_participants", Int($participant_id), "timestamp decision_date,decision", $block_time, -1)
        
        voting_UpdateDataForGraphs("votingID", $votingID)
    }
}