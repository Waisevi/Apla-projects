DBFind(applications,src_app).Columns("name,id").Where("name='Basic application'").Vars(application)
SetVar(template_id, AppParam(App:#application_id#, Name: voting_ves_template_id))
DBFind(buffer_data).Where("member_id=#key_id# and key='metrics'").Vars(m)
JsonToSource(src_metrics,#m_value#)

SetTitle($sysparams_ecos$)
DBFind(ecosystems,ecos).Order(id).Custom(_actions){
    Div(text-right){
        If(#template_id#>0){
            If(#is_valued#==0){
                Input(Name: RowId, Type: hidden, Value: #id#)
                Input(Name: NewValue, Type: hidden, Value: 1)
                Button(Body: $start_voting_ves$, Class: btn btn-block btn-primary, Page: sysparams_ecosystems_list, Contract: voting_TemplateRun)
            }
        }.Else{
            Span(voting id template not found in parameters, text-muted)
        }
    }
}.Custom(_valued){
    If(#is_valued#==1){
        is valued
    }
}.Custom(_metrics){
    If(#m_id#>0){
        SetVar(eco_id,#id#)
        ForList(src_metrics){
            If(#key#==#eco_id#){
                LinkPage(Body: `#value#`, Page:sysparams_metrics, PageParams:"Id=#key#")
            }
        }
    }
}

Data(form, "Name,Type,Src"){
    Interval,number,
    Aggregate,select,aggregates
}
Data(aggregates, "id,name"){
    max,Maximum
    min,Minimum
    avg,Average
}

Div(content-wrapper){
    Form(panel panel-primary){
        Div(panel-body){
            ForList(form){
                Div(row form-group){
                    Div(col-sm-3 text-right){
                        Label(For:#Name#){
                            LangRes(#Name#)
                        }
                    }
                    Div(col-sm-9){
                        If(#Type#==datetime){
                            Input(Name:#Name#, Type:date)
                        }.ElseIf(#Type#==select){
                            Select(Name: #Name#, Source: #Src#, NameColumn: name, ValueColumn: id)
                        }.Else{
                            Input(Name:#Name#, Type:#Type#)
                        }
                    }
                }
            }
        }
        Div(panel-footer text-right){
            Button(Body: LangRes(udpate_metrics), Page: sysparams_ecosystems_list, Class:btn btn-primary, Contract:sysparams_UpdateMetrics)
        }
    }
    Form(panel panel-primary){
        Div(panel-body){
            Form(table-responsive){
                Input(Name: TableWritten, Type: hidden, Value: ecosystems)
                Input(Name: ColumnName, Type: hidden, Value: is_valued)
                Input(Name: Duration, Type: hidden, Value: 3)
                Input(Name: TemplateId, Type: hidden, Value: #template_id#)
                Table(ecos, "$name$=name,=_valued,metrics=_metrics,=_actions")
            }
        }
    }
}
