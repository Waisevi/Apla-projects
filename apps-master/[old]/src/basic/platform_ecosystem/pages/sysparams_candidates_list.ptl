Div(content-wrapper){
    DBFind(Name:applications, Source:src_app).Columns("name,id").Where("name='Basic application'").Vars(application)
    SetVar(template_id, AppParam(App:#application_id#, Name: voting_validators_template_id))
    SetTitle($sysparams_candidates$)

    DBFind(Name:sysparams_candidate, Source: src_candidates).Where("deleted=0").Custom(_actions){
        If(#template_id#>0){
            Div(btn-group){
                Input(Name:KeyId, Type: hidden, Value: #candidate_key_id#)
                Input(Name:TemplateId, Type: hidden, Value: #template_id#)
                Button(Contract: voting_TemplateRun, Page: voting_list, Class: btn btn-default fa fa-play)
            }
        }.Else{
            Span($voting_template_not_found$,text-muted)
        }

    }.Custom(_date){
        DateTime(DateTime: #date_created#, Format: YYYY-MM-DD HH:MI)
    }

    Div(breadcrumb){
        Span(Class: text-muted, Body: $sysparams_candidates$)
    }

    Div(row){
        Div(col-md-12){
            Div(panel panel-primary){
                Form(table-responsive){
                    Input(Name: Duration, Type: hidden, Value: 14)
                    Table(Source: src_candidates, Columns: "$id$=id,$host_ip$=host_ip,$commission_address$=commission_address,$description_equipment$=description,$comment$=comment,$date_created$=_date,$voting$=_actions")
                }
                Div(panel-footer text-right){
                    Button(Body: $add$, Class: btn btn-primary, Page: sysparams_candidate_validators_create)
                }
            }
        }
    }
}