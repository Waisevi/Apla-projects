DBFind(applications,src_app).Columns("name,id").Where({name:"Basic application"}).Vars(application)
If(#v_role_id#>0){
    DBFind(roles,src_roles).WhereId(#v_role_id#).Columns("id,role_name,role_type,roles_access->rids,creator->member_id").Vars(prefix)

    If(#prefix_creator_member_id#==#key_id#){
        SetVar(manager_id,1)
    }.ElseIf(And(#prefix_roles_access_rids#!="",#prefix_roles_access_rids#!="NULL")){
        DBFind(roles).Where({id:[{"$in": [#prefix_roles_access_rids#]}, {"$eq":#role_id#}]}).Columns("id").Vars(manager)
    }.Else{
        SetVar(manager_id,0)
    }

    Form(){
        Div(row){
            Div(col-md-3 mt-sm text-right){
                Label(){
                    Span(Body: LangRes(role))
                    Span(Class: text-danger, Body:*)
                }
            }
            Div(col-md-9 mb-sm text-left){
                Input(Type: hidden, Name: rid, Value: #prefix_id#)
                SetVar(Name: var_prefix_role_name, Value: LangRes(#prefix_role_name#))
                Input(Name: input_prefix_role_name, Value: #var_prefix_role_name#, Disabled: true)
            }
        }
        Div(row){
            Div(col-md-3 mt-sm text-right){
                Label(){
                    LangRes(type) Span(*,text-danger)
                }
            }
            Div(col-md-9 mb-sm text-left){
                SetVar(Name: var_prefix_role_type, Value: AppParam(App:#application_id#, Name: roles_types, Index: #prefix_role_type#))
                Input(Name: input_prefix_role_type, Value: #var_prefix_role_type#, Disabled: true)
                If(#manager_id#==0){
                    P(Class: m0 text-danger h6, Body: LangRes(appointment_impossible))
                }
            }
        }
        If(#manager_id#>0){
            SetVar(participants,0)
            DBFind(roles_participants).Where({"role->id":#v_role_id#, deleted:0}).Columns("id,member->member_id").Custom(_id){
                SetVar(participants,"#participants#,#member.member_id#")
            }
            DBFind(keys,src_keys).Where({id:{"$nin":[#participants#]}}).Columns("id").Custom(_name){
                SetVar(m_id, 0)
                DBFind(members).WhereId(#id#).Columns("id,member_name").Vars(m)
                Address(#id#)
                If(Or(#m_id#>0,#m_id#<0)){
                    " (#m_member_name#)"
                }
            }
            Div(row){
                Div(col-md-3 mt-sm text-right){
                    Label(){
                        Span(Body: LangRes(member)).(Class: text-danger, Body:*)
                    }
                }
                Div(col-md-9 mb-lg text-left){
                    Select(Name: member_id, Source: src_keys, NameColumn: _name, ValueColumn: id)
                }
            }
        }
        Div(pull-right){
            Button(Body: LangRes(back), Class: btn btn-default, Page: roles_view, PageParams: "v_role_id=#v_role_id#")
            If(#manager_id#>0){
                Button(Body: LangRes(assign), Class: btn btn-primary, Page: roles_view, PageParams: "v_role_id=#v_role_id#", Contract: RolesAssign, Params: "member_id=Val(member_id)").Alert(Text: $want_assign_member_to_role$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
            }
        }
    }
}.Else{
    Div(md-12 alert alert-danger text-center){
        Span(Body: LangRes(attention))
    }
}