contract tokenrefund_Reject{
    data{
        Id string
    }
    
    func unblockAccounts(victimId, attackerId string){
        if victimId==0 {
            error "unblockAccounts. invalid victim key"
        }
        if attackerId==0{
            error "unblockAccounts. invalid attacker key"
        }
        DBUpdate("keys", Int(victimId), "blocked", 0)
        DBUpdate("keys", Int(attackerId), "blocked", 0)
    }
    
    conditions{
        $tokenrefund = DBFind("tokenrefund").Where("id=?", $Id).Row()
        if !$tokenrefund{
            error "tokenrefund not found"
        }
    }
    
    action{
        unblockAccounts($tokenrefund["victim_key_id"],$tokenrefund["attacker_key_id"])
        // status 3: closed; 1: return cancelled
        DBUpdate("tokenrefund", Int($tokenrefund["id"]), "status,result", 3,1)
    }
}