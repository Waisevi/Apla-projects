contract sysparams_UpdateMetrics{
    data{
        Interval string
        Aggregate string
    }
    func mapping(items array)map{
        var mapout map, i int
        while i<Len(items){
            var k v string, item map
            item = items[i]
            k = item["key"]
            v = item["value"]
            mapout[k] = v
            i=i+1
        }
        return mapout
    }
    conditions{
        if $Interval <= 0 {
            $Interval = 1
        }
        var current_year int
        current_year = 2018
        if $Interval > (current_year - 1970)*365 {
            warning "Interval too big"
        }
        $interval = Sprintf("%v days", $Interval)
    }

    action{
        var pages members txs array, metrics map
        pages = DBSelectMetrics("ecosystem_pages", $interval, $Aggregate)
        members = DBSelectMetrics("ecosystem_members", $interval, $Aggregate)
        txs = DBSelectMetrics("ecosystem_tx", $interval, $Aggregate)
        var mPages mMembers mTxs map
        mPages = mapping(pages)
        mMembers = mapping(members)
        mTxs = mapping(txs)
        var i int
        while i<Len(pages){
            var t map, k string
            t = pages[i]
            k = t["key"]
            metrics[k] = Sprintf("pages: %v, members: %v, tx: %v; [%v, %v]", mPages[k], mMembers[k], mTxs[k], $interval, $Aggregate)
            i=i+1
        }

        if Len(pages)>0{
            buffer_Manager("Action,Key,Val", "set", "metrics", JSONEncode(metrics))
        }
    }
}