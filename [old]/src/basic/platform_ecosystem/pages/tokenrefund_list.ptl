Div(content-wrapper){
    DBFind(Name:applications, Source:src_app).Columns("name,id").Where("name='Basic application'").Vars(application)
    SetTitle($tokenrefund_list$)

    DBFind(Name: tokenrefund, Source: src).Order(id desc).Custom(_status){
        If(#status#>0){
            SetVar(sta,AppParam(App:#application_id#, Name: tokenrefund_status, Index: #status#))
            LangRes(#sta#)
        }.Else{
            $tokenrefund_status0$
        }
    }.Custom(_result){
        If(#result#>0){
            SetVar(res,AppParam(App:#application_id#, Name: tokenrefund_result, Index: #result#))
            LangRes(#res#)
        }.Else{
            $tokenrefund_result0$
        }
    }.Custom(_blocked){
        DateTime(Format: YYYY-MM-DD HH:MI:SS, DateTime: #blocked_at#)
    }.Custom(_closed){
        DateTime(Format: YYYY-MM-DD HH:MI:SS, DateTime: #closed_at#)
    }.Custom(_accounts){
        Div(){$tokenrefund_victim$: #victim_key_id#}
        Div(){$tokenrefund_attacker$: #attacker_key_id#}
    }.Custom(_voting){
        LinkPage(Page: voting_view, PageParams: "vID=#voting_id#"){##voting_id#}
    }

    Div(panel panel-primary){
        Div(table-responsive){
            Table(Source: src, Columns: "$accounts$=_accounts,$amount$=amount,$description$=note,$validator_id$=validator_id,$blocked_at$=_blocked,$voting$=_voting,$result$=_result,$status$=_status,$closed$=_closed")
        }

        Form(panel-footer text-right){
            Button(Body: $request_refund$, Class: btn btn-primary, Page: tokenrefund_create)
        }
    }
}

