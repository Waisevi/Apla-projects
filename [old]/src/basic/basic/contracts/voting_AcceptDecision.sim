contract voting_AcceptDecision {
    data {
        votingID int
    }

    conditions {
        $voting = DBFind("votings").Columns("id,flags->decision,flags->notifics,voting->type_participants,voting->role_id").Where("id=?", $votingID).Row()
        if !$voting {
            warning "Voting is not found"
        }
        if $voting["voting.type_participants"] == 3{
            if $voting["voting.role_id"] != $role_id{
                warning "Incorrect role for voting"
            }
        }

        $subject = DBFind("votings_subject").Where("voting_id=$", $votingID).Row()
        if !$subject {
            warning "Subject of voting is not found"
        }

        $participant_id = DBFind("votings_participants").Where("voting_id=$ and member->member_id=$", $votingID, $key_id).One("id")
        if !$participant_id {
            warning "You are not a participant in this voting"
        }
    }

    action {
        // if notifications have been sent, then close it
        if $voting["flags.notifics"] == 1 {
            var noteId string
            noteId = DBFind("notifications").Where("recipient->member_id=$ and page_name=$ and page_params->voting_id=$ and closed=$", $key_id, "voting_view", $votingID, 0).One("id")
            if noteId {
                notifications_Close("notific_id", Int(noteId))
            }
        }

        // check the decision
        if $voting["flags.decision"] == 1 {
            warning "Decision was taken. Voting is now not possible"
        }

        // check start-end of voting time
        var voting_start voting_end string
        voting_start = DBFind("votings").Where("id=$ and date_started < $", $votingID, BlockTime()).One("id")
        voting_end = DBFind("votings").Where("id=$ and date_ended > $", $votingID, BlockTime()).One("id")
        if !voting_start {
            warning "Voting has not yet begun. Try again later, please"
        }
        if !voting_end {
            warning "Voting has expired. Voting is now not possible"
        }

        DBUpdate("votings_participants", Int($participant_id), "timestamp decision_date,decision", $block_time, 1)

        // increment count of accept
        DBUpdate("votings_subject", Int($subject["id"]), "+number_accept", 1)

        voting_UpdateDataForGraphs("votingID", $votingID)
    }
}