Div(content-wrapper){
    If(Or(#v_member_id#>0,#v_member_id#<0)){
    }.Else{
        SetVar(Name: v_member_id, Value: #key_id#)
    }
    DBFind(Name: members, Source: src_member).Columns("id,image_id,member_name,member_info->information").Where("id=#v_member_id#").Vars(prefix)
    DBFind(Name: keys, Source: src_keys).Where("id=#v_member_id#").Vars(tokens)
    
    If(Or(#prefix_id#>0,#prefix_id#<0)){
    }.Else{
        SetVar(Name: prefix_member_name, Value: "")
    }
    
    Div(row){
        Div(col-sm-8 col-sm-offset-2 col-lg-6 col-lg-offset-3){
            Form(panel panel-primary){
                Div(list-group-item){
                    P(Class: text-center text-bold h4 m0, Body: LangRes(user_info))
                    Div(panel-body){
                        Div(form-group){
                            Div(row){
                                Div(col-md-12 mt-sm text-center){
                                    If(Or(#prefix_id#>0,#prefix_id#<0)){
                                        If(#prefix_id# == #key_id#){
                                            Button(Class: btn btn-link, Page: profile_edit, PageParams: "v_member_id=#key_id#"){
                                                If(#prefix_image_id#>0){
                                                    Image(Src: Binary().ById(#prefix_image_id#), Class: img-thumbnail).Style(width: 120px; border: 1px solid #5A5D63;)
                                                }.Else{
                                                    Span(Class: fa icon-user fa-5x text-primary)
                                                }
                                                Div(m0 h4 text-bold){#prefix_member_name#}
                                            }
                                        }.Else{
                                            If(#prefix_image_id#>0){
                                                Image(Src: Binary().ById(#prefix_image_id#), Class: img-thumbnail).Style(width: 120px; border: 1px solid #5A5D63;)
                                            }.Else{
                                                Span(Class: fa icon-user fa-5x)
                                            }
                                            Div(m0 h4 text-bold){#prefix_member_name#}
                                        }
                                        Div(Class: h5 text-muted m0, Body: #prefix_member_info_information#)
                                    }.Else{
                                        Div(text-muted m0 h5, Body: LangRes(wallet_address))
                                        Div(Class: h5, Body: Address(#key_id#))
                                        Button(Class: btn btn-link, Page: profile_edit){
                                            Div(Class: h5 m0, Body: LangRes(editing_profile))
                                        }
                                    }
                                }
                            }
                        }
                        Div(list-group-item text-center){
                            Div(text-muted m0 h5, Body: LangRes(roles))
                            DBFind(Name: roles_participants, Source: src_check).Columns("id").Where("member->member_id='#v_member_id#' and deleted=0").Vars(check)
                            If(#check_id#>0){
                                DBFind(Name: roles_participants, Source: src_roles).Columns("role->id,role->name").Where("member->member_id='#v_member_id#' and deleted=0").Order("id")
                                ForList(src_roles){
                                    Span(){
                                        LinkPage(Page: roles_view, PageParams: "v_role_id=#role.id#"){
                                            Span(Class: h5, Body: "#role.name#")
                                        }
                                    }.Style(margin-right: 6px; margin-left: 6px;)
                                }
                            }.Else{
                                Span(LangRes(no))
                            }
                            If(#v_member_id# == #key_id#){
                                SetVar(founder_account, EcosysParam("founder_account"))
                                If(#founder_account# != #key_id#){
                                Div(){
                                    Button(Class: btn btn-link, Page: roles_request, Body: LangRes(request)).Popup(Header: $request$, Width: "30")
                                }
                            }
                        }
                    }
                }
                If(#prefix_id# == #key_id#){
                    Div(list-group-item){
                        P(Class: text-center text-bold h4 m0, Body: LangRes(tokens_transfer))
                        Div(panel-body){
                            Div(form-group){
                                Div(row){
                                    Div(col-md-12 mc-sm text-center){
                                        Div(text-muted m0 h5, Body: LangRes(tokens))
                                        Span(Class: h5 text-bold, Body: Money(#tokens_amount#) APL)
                                    }
                                }
                                Div(row){
                                    Div(col-md-12 mt-lg text-center){
                                        Div(text-muted m0 h5, Body: LangRes(wallet_address))
                                        Span(Class: h5, Body: Address(#prefix_id#))
                                    }
                                }
                            }
                            Div(list-group-item text-center){
                                Div(row){
                                    Div(col-md-3 mt-sm text-right){
                                        Span(Class: h6 text-bold, Body: LangRes(recipient))
                                    }
                                    Div(col-md-9 mb-sm text-left){
                                        Input(Name: Recipient_Account, Placeholder: "xxxx-xxxx-xxxx-xxxx-xxxx")
                                    }
                                }
                                Div(row){
                                    Div(col-md-3 mt-sm text-right){
                                        Span(Class: h6 text-bold, Body: LangRes(amount))
                                    }
                                    Div(col-md-9 mc-sm text-left){
                                        Input(Name: Amount, Type: Number)
                                    }
                                }
                            }
                        }
                        Div(row){
                            Div(col-md-12 mc-sm){
                                Button(Body: LangRes(send), Class: btn btn-default pull-right, Page: profile_view, Contract: SendTokens).Alert(Text: $want_send_tokens$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
                            }
                        }
                    }
                }
            }
        }
    }
}