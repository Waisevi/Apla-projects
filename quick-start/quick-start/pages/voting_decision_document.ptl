Div(content-wrapper){
    If(#vID# > 0){
        DBFind(Name: votings, Source: src_voting).Columns("id,voting->name,optional->contract_accept,optional->contract_reject,optional->contract_accept_params,optional->contract_reject_params").Where("id=#vID#").Vars(instance)
        DBFind(Name: votings_subject, Source: src_voting_subject).Columns("id,subject->text").Where("voting_id=#vID#").Vars(prefix)

        If(#prefix_id#>0){
        }.Else{
            SetVar(Name: prefix_subject_text, Value: "")
        }

        SetTitle($subject_voting$)
        Div(breadcrumb){
            LinkPage($voting$, voting_list)
            Span(/).Style(margin-right: 10px; margin-left: 10px;)
            LinkPage(#instance_voting_name#, voting_view,, "vID=#vID#")
            Span(/).Style(margin-right: 10px; margin-left: 10px;)
            Span(Class: text-muted, Body: $subject_voting$)
        }

        Div(row){
            Div(col-sm-10 col-sm-offset-1 col-lg-8 col-lg-offset-2){
                Form(panel panel-primary){
                    Div(panel-body){
                        Div(form-group){
                            Div(row){
                                Div(col-md-12 mt-sm){
                                    Label(){
                                        Span(Body: LangRes(text_document))
                                        Span(Class: text-danger, Body:*)
                                    }
                                    Input(Name: text_document, Type: textarea, Value: #prefix_subject_text#)
                                }
                            }
                        }
                        Div(form-group){
                            Div(row mb-sm){
                                Div(col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(contract_accept))
                                    }
                                }
                                Div(col-md-9 text-left){
                                    Input(Name: contract_accept, Value: #instance_optional_contract_accept#, Placeholder: "$contract_accept_des$").Validate(minLength:3, maxLength:255)
                                    InputErr(Name: contract_accept, minLength: $validate_contract_name$, maxLength: $validate_contract_name$)
                                }
                            }
                            Div(row mb-sm){
                                Div(col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(params))
                                    }
                                }
                                Div(col-md-9 text-left){
                                    Input(Name: contract_accept_params, Value: #instance_optional_contract_accept_params#, Placeholder: "$contract_params_des$")
                                }
                            }
                            Div(row mb-sm){
                                Div(col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(contract_reject))
                                    }
                                }
                                Div(col-md-9 text-left){
                                    Input(Name: contract_reject, Value: #instance_optional_contract_reject#, Placeholder: "$contract_reject_des$").Validate(minLength:3, maxLength:255)
                                    InputErr(Name: contract_reject, minLength: $validate_contract_name$, maxLength: $validate_contract_name$)
                                }
                            }
                            Div(row){
                                Div(col-md-3 mt-sm text-right){
                                    Label(){
                                        Span(Body: LangRes(params))
                                    }
                                }
                                Div(col-md-9 mc-sm text-left){
                                    Input(Name: contract_reject_params, Value: #instance_optional_contract_reject_params#, Placeholder: "$contract_params_des$")
                                }
                            }
                        }
                    }
                    Div(panel-footer text-right){
                        Div(pull-left){
                            Button(Body: LangRes(back), Class: btn btn-default, Page: voting_view, PageParams: "vID=#vID#")
                        }
                        Input(Name: votingID, Type: hidden, Value: #vID#)

                        Button(Body: LangRes(save), Class: btn btn-primary, Page: voting_view, PageParams: "vID=#vID#", Contract: voting_SubjectDocument)
                    }
                }
            }
        }
    }.Else{
        Div(md-12 alert alert-danger text-center){
            Span(Body: LangRes(attention))
        }
    }
}