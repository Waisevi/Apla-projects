
DBFind(applications,src_app).Columns("name,id").Where("name='Basic application'").Vars(application)
SetTitle("List of votings")

If(GetVar(Search)){
    SetVar(Where,"voting->name='#Search#' and deleted=0")
}.Else{
    SetVar(Where,"deleted=0").(Search,)
}

DBFind(votings,src_voting).Custom(_id){
    Span(Class: h5, Body: #id#)

    DBFind(votings).Columns("date_started").Where("id=#id# and date_started < now()").Vars(started)
    DBFind(votings).Columns("date_ended").Where("id=#id# and date_ended < now()").Vars(ended)

    If(#started_id#>0){
        SetVar(isStarted,1).(startedClass,text-muted)
    }.Else{
        SetVar(isStarted,-1).(startedClass,text-bold)
    }
    If(#ended_id#>0){
        SetVar(isEnded,1).(endedClass,text-muted)
    }.Else{
        SetVar(isEnded,-1).(endedClass,text-bold)
    }
}.Custom(_name){
    LinkPage(Page: voting_view, PageParams: "vID=#id#"){
        Span(Class: h5 text-bold m0, Body: #voting.name#)
    }
}.Custom(_subject){
    SetVar(decision, AppParam(App:#application_id#, Name: type_voting_decisions, Index: #voting.type_decision#))
    Div(h6 m0){
        If(Or(#isStarted#>0,#voting.type#==2)){
            #decision#
        }.Else{
            If(#voting.type_decision# == 1){
                SetVar(Page,voting_decision_candidates)
            }.ElseIf(#voting.type_decision# == 2){
                SetVar(Page,voting_decision_election)
            }.ElseIf(#voting.type_decision# == 3){
                SetVar(Page,voting_decision_document)
            }.ElseIf(#voting.type_decision# == 4){
                SetVar(Page,voting_decision_formal)
            }.ElseIf(#voting.type_decision# == 5){
                SetVar(Page,voting_decision_contract)
            }
            LinkPage(Page: #Page#, PageParams: "vID=#id#", Class:text-bold, Body: #decision#)
        }
    }
}.Custom(_participants){
    SetVar(participants, AppParam(App:#application_id#, Name: type_voting_participants, Index: #voting.type_participants#))
    Div(h6 m0){
        If(Or(#isStarted#>0,#voting.type#==2)){
            #participants#
        }.Else{
            LinkPage(Page: voting_invite, PageParams: "vID=#id#", Class:text-bold, Body: #participants#)
        }
    }
}.Custom(_creator){
    LinkPage(Class: text-primary h5 text-bold, Page: profile_view, PageParams: "v_member_id=#creator.member_id#", Body: #creator.member_name#)
}.Custom(_date){
    Div(Class: #startedClass#, Body: DateTime(DateTime: #date_started#, Format: "DD.MM.YYYY HH:MI"))
    Div(Class: #endedClass#, Body: DateTime(DateTime: #date_ended#, Format: "DD.MM.YYYY HH:MI"))
}.Custom(_type){
    Span(Class: h6 m0, Body: AppParam(App:#application_id#, Name: type_voting, Index: #voting.type#))
}.Custom(_progress){
    Div(Class: text-center h5 text-bold, Body: #progress.percent_success# %)
}.Custom(_decision){
    Div(text-center){
        If(#flags.decision# == 0){
            If(And(#isEnded#>0,#creator.member_id#==#key_id#)){
                Button(Body: LangRes(decision), Class: btn btn-primary, Contract: voting_CheckDecision, Params: "votingID=#id#", Page: voting_list)
            }.Else{
                Div(text-muted){LangRes(no)}
            }
        }.ElseIf(#flags.decision# == -2){
            Div(text-muted){LangRes(not_enough_votes)}
        }.ElseIf(#flags.decision# == 1){
            Div(text-success){LangRes(accepted)}
        }.ElseIf(#flags.decision# == -1){
            Div(text-danger){LangRes(rejected)}
        }
    }
}.Custom(_status){
    Div(text-center){
        If(#flags.success# == 1){
            Span(Class: text-success, Body: LangRes(success))
        }.ElseIf(#isEnded#>0){
            Span(Class: text-muted, Body: LangRes(finished))
        }.ElseIf(#isStarted#>0){
            If(And(#flags.full_data#==1,#progress.number_participants#>0)){
                Button(Class: btn btn-link icon-eye, Page: voting_view, PageParams: "vID=#id#")
            }.Else{
                Span(Class:text-danger, Body: LangRes(invalid))
            }
        }.Else{
            Span(Class: text-warning, Body: LangRes(waiting))
        }
    }
}.Custom(_actions){
    Div(text-right){
        If(And(#creator.member_id#==#key_id#,Or(#flags.full_data#==0,#progress.number_participants#==0,#isStarted#<0))){
            Button(Class: fa fa-trash btn btn-default, Contract: voting_Delete, Params: "votingID=#id#", Page: voting_list).Alert(Text: $want_delete_voting$, ConfirmButton: $yes$, CancelButton: $no$, Icon: question)
        }
    }
}.Where(#Where#).Order(id desc).Columns("id,voting->name,voting->type,voting->type_decision,voting->type_participants,flags->success,flags->decision,flags->full_data,progress->percent_success,progress->number_participants,creator->member_id,creator->member_name,date_started,date_ended,deleted")

AddToolButton(Title: $create$, Page: voting_create, Icon: icon-plus)
Div(content-wrapper){
    Form(panel panel-primary){
        Div(panel-body){
            Div(row){
                Div(col-md-12){
                    Div(input-group){
                        Div(input-group-addon){
                            LangRes(name)
                        }
                        Input(Name: Search, Value: #Search#)
                        Div(input-group-btn){
                            Button(Body: Em(Class: fa fa-search), Class: btn btn-default, Page: voting_list, PageParams: "Search=Val(Search)")
                        }
                    }
                }
                Div(col-md-12){
                    Div(table-responsive){
                        Table(src_voting, "$id$=_id,$name$=_name,$type$=_type,$subject_voting$=_subject,$participants$=_participants,$date_start$/$date_end$=_date,$creator$=_creator,$progress$=_progress,$decision$=_decision,$status$=_status,=_actions")
                    }
                }
            }
            If(GetVar(Search)){
                Div(row){
                    Div(col-md-12 mt-lg){
                        Div(text-center){
                            Button(Body: $view_all$, Class: btn btn-default, Page: voting_list)
                        }
                    }
                }
            }
        }
    }
}